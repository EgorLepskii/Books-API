<?php

namespace Tests\Integration\Auth;

use App\Models\User;
use Faker\Factory;
use Illuminate\Support\Facades\DB;
use function bcrypt;
use function route;

class ValidationLoginAuthTest extends \Tests\TestCase
{
    private $faker;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->faker = Factory::create();
        DB::beginTransaction();

    }

    /**
     * Test login with incorrect password
     */
    public function testIncorrectPassword(): void
    {
        $name = $this->faker->name;
        $email = $this->faker->email;
        $password = $this->faker->password;

        $user = new User(
            [
                'name'=>$name,
                'email'=>$email,
                'password' => bcrypt($password)
            ]
        );
        $user->save();
        $this->post(
            route('user.login'),
            [
                'email' => $email,
                'password' => $this->faker->password
            ]
        )->assertStatus(401);

    }


    /**
     * Test login with correct password
     */
    public function testCorrectPassword(): void
    {
        $name = $this->faker->name;
        $email = $this->faker->email;
        $password = $this->faker->password;

        $user = new User(
            [
                'name'=>$name,
                'email'=>$email,
                'password' => bcrypt($password)
            ]
        );

        $user->save();

        $this->post(
            route('user.login'), ['email' => $email, 'password' => $password]
        )->assertStatus(200);

    }


    public function testIncorrectData(): void
    {
        $this->post(route('user.login'), ['email'=>'','password'=>''])->assertStatus(422);
    }

    protected function tearDown(): void
    {
        DB::rollBack();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

}
