<?php

namespace Tests\Integration\BookManage;

use App\Models\Book;
use App\Models\Genre;
use App\Models\User;
use Core\Constants;
use Faker\Factory;
use Illuminate\Support\Facades\DB;
use function bcrypt;
use function route;

class UpdateTest extends \Tests\TestCase implements Constants
{
    private $faker;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->faker = Factory::create();
        DB::beginTransaction();

    }

    /**
     * Test, that users without admin rights cannot create book
     */
    public function testAdminAccess(): void
    {
        $user = new User(
            [
                'name' => $this->faker->name,
                'email' => $this->faker->email,
                'password' => bcrypt($this->faker->password),
                'isAdmin' => false
            ]
        );
        $genre = new Genre(['name'=>$this->faker->name]);
        $genre->save();

        $user->save();
        auth()->login($user);
        $book = new Book(
            [
                'name' => $this->faker->firstName,
                'annotation' => $this->faker->streetName,
                'authors' => $this->faker->name,
                'price' => $this->faker->numberBetween(self::MIN_BOOK_PRICE, self::MAX_BOOK_PRICE),
                'isHidden' => false,
                'genreId' => $genre->getId()

            ]
        );

        $book->save();
        $this->post(route('manageBook.update', $book->getId()), [])->assertStatus(403);
    }


    protected function tearDown(): void
    {
         DB::rollBack();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

}
