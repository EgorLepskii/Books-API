<?php

namespace Tests\Integration\Book;

use App\Models\Book;
use App\Models\Genre;
use App\Models\User;
use Core\Constants;
use Faker\Factory;
use Illuminate\Support\Facades\DB;
use function bcrypt;
use function route;

class RelationTest extends \Tests\TestCase implements Constants
{
    private $faker;
    private Genre $genre;
    private Book $book;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->faker = Factory::create();
        DB::beginTransaction();

        $this->genre = new Genre(['name' => $this->faker->name]);
        $this->genre->save();
        $this->book = new Book
        (
            [
                'name' => $this->faker->name,
                'annotation' => $this->faker->name,
                'authors' => $this->faker->name,
                'price' => self::MAX_BOOK_PRICE,
                'genreId' => $this->genre->getId()
            ]
        );
        $this->book->save();

    }


    /**
     * Test book->genre hasOne relation
     * @return void
     */
    public function testBookGenreRelation()
    {
        $this->assertEquals($this->genre->getId(), $this->book->genre()->first()->getId());
    }



    public function tearDown(): void
    {
        DB::rollBack();
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

}
